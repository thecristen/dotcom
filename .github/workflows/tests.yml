name: CI
on:
  pull_request:
    # Don't bother running if it's a PR on a feature branch
    branches: master

    # Don't bother running if it's just a script or docs change
    paths-ignore:
      - ".github/**"
      - "bin/**"
      - Dockerfile
      - "*.sh"
      - "*.md"
      - AUTHORS

env:
  MIX_ENV: test
  V3_URL: ${{ secrets.V3_URL }}
  V3_API_KEY: ${{ secrets.V3_API_KEY }}

jobs:
  setup:
    name: Before all / Load cached deps
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: <asdf> Restore cache of languages from .tool-versions
      uses: actions/cache@v2
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      id: asdf-cache
    - name: <asdf> Install languages from .tool-versions (if needed)
      uses: asdf-vm/actions/install@v1
      if: steps.asdf-cache.outputs.cache-hit != 'true'
    - name: <asdf> Set env vars
      run: |
        ASDF_DIR=$HOME/.asdf
        echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
        echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
        echo "$ASDF_DIR/bin" >> $GITHUB_PATH
        echo "$ASDF_DIR/shims" >> $GITHUB_PATH
        $ASDF_DIR/bin/asdf reshim

    - name: <elixir> Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      id: elixir-cache
    - name: <elixir> Install dependencies (if needed)
      if: steps.elixir-cache.outputs.cache-hit != 'true'
      run: |
        mix local.hex --force
        mix local.rebar --force
        mix deps.get

    - name: <node> Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: "apps/site/*/node_modules"
        key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
      id: node-cache
    - name: <node> Install dependencies (if needed)
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: |
        git config --global url."https://github.com/".insteadOf ssh://git@github.com/
        npm run install:ci
        npm run react:setup:ci
  
  file_changes:
    name: Before all / Note files changed
    runs-on: ubuntu-latest
    outputs:
      js: ${{ steps.changes.outputs.js }}
      ts: ${{ steps.changes.outputs.ts}}
      ex: ${{ steps.changes.outputs.ex }}
      scss: ${{ steps.changes.outputs.scss }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: changes
        run: |
          changes () { git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} ; }
          echo "changed files?  \n$(changes)"
          echo "::set-output name=js::$(changes | grep "apps/site/assets/js/.*\\.js" | xargs)"
          echo "::set-output name=ts::$(changes | grep "apps/site/assets/ts/.*\\.ts" | xargs)"
          echo "::set-output name=scss::$(changes | grep "apps/site/assets/css/.*\\.scss" | xargs)"
          echo "::set-output name=ex::$(changes | grep ".*\\.exs\?\$" | xargs)"

  tslint:
    name: Linting / TypeScript
    runs-on: ubuntu-latest
    needs: [file_changes, setup]
    if: ${{ needs.file_changes.outputs.ts }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      - run: |
          ASDF_DIR=$HOME/.asdf
          echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "$ASDF_DIR/bin" >> $GITHUB_PATH
          echo "$ASDF_DIR/shims" >> $GITHUB_PATH
          $ASDF_DIR/bin/asdf reshim
      - uses: actions/cache@v2
        with:
          path: "apps/site/*/node_modules"
          key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
      - run: npx eslint --ext .ts,.tsx --max-warnings=0 .
        working-directory: apps/site/assets/ts
  
  jslint:
    name: Linting / JavaScript
    runs-on: ubuntu-latest
    needs: [file_changes, setup]
    if: ${{ needs.file_changes.outputs.js }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      - run: |
          ASDF_DIR=$HOME/.asdf
          echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "$ASDF_DIR/bin" >> $GITHUB_PATH
          echo "$ASDF_DIR/shims" >> $GITHUB_PATH
          $ASDF_DIR/bin/asdf reshim
      - uses: actions/cache@v2
        with:
          path: "apps/site/*/node_modules"
          key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
      - run: npx eslint --ext .js js
        working-directory: apps/site/assets

  stylelint:
    name: Linting / CSS
    runs-on: ubuntu-latest
    needs: [file_changes, setup]
    if: ${{ needs.file_changes.outputs.scss }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
    - run: |
        ASDF_DIR=$HOME/.asdf
        echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
        echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
        echo "$ASDF_DIR/bin" >> $GITHUB_PATH
        echo "$ASDF_DIR/shims" >> $GITHUB_PATH
        $ASDF_DIR/bin/asdf reshim
    - uses: actions/cache@v2
      with:
        path: "apps/site/*/node_modules"
        key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
    - run: npx stylelint css/**/*.scss --ignore-path .stylelintignore
      working-directory: apps/site/assets/
  
  elixirlint:
    name: Linting / Elixir
    runs-on: ubuntu-latest
    needs: [file_changes, setup]
    if: ${{ needs.file_changes.outputs.ex }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      - run: |
          ASDF_DIR=$HOME/.asdf
          echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "$ASDF_DIR/bin" >> $GITHUB_PATH
          echo "$ASDF_DIR/shims" >> $GITHUB_PATH
          $ASDF_DIR/bin/asdf reshim
      - uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - run: mix credo diff master -a

  elixir_unit:
    name: Unit tests / Elixir / --exclude wallaby --cover
    runs-on: ubuntu-latest
    needs: [file_changes, setup]
    if: ${{ needs.file_changes.outputs.ex }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      - run: |
          ASDF_DIR=$HOME/.asdf
          echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "$ASDF_DIR/bin" >> $GITHUB_PATH
          echo "$ASDF_DIR/shims" >> $GITHUB_PATH
          $ASDF_DIR/bin/asdf reshim
      - uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - uses: actions/cache@v2
        with:
          path: "apps/site/*/node_modules"
          key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
      - name: Build app
        run: |
          mix phx.digest
          npm run react:build
          npm run webpack:build
          mix compile --warnings-as-errors
      - env:
          RECAPTCHA_PUBLIC_KEY: 6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
          RECAPTCHA_PRIVATE_KEY: 6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
          OPEN_TRIP_PLANNER_URL: ${{ secrets.OPEN_TRIP_PLANNER_URL }}
        run: mix test --exclude wallaby --cover
      - name: Save PR information
        run: |
          echo "${{ github.event.pull_request.number }}" > cover/PR_NUMBER
          echo "${{ github.event.pull_request.head.sha }}" > cover/PR_SHA
        if: github.event.pull_request
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: elixir-lcov
          path: cover/
  
  js_unit_1:
    name: Unit tests / JavaScript / Mocha
    runs-on: ubuntu-latest
    needs: [file_changes, setup]
    if: ${{ needs.file_changes.outputs.js }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
    - run: |
        ASDF_DIR=$HOME/.asdf
        echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
        echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
        echo "$ASDF_DIR/bin" >> $GITHUB_PATH
        echo "$ASDF_DIR/shims" >> $GITHUB_PATH
        $ASDF_DIR/bin/asdf reshim
    - uses: actions/cache@v2
      with:
        path: "apps/site/*/node_modules"
        key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
    - run: npx mocha --require @babel/register --require ts-node/register js/test/**/*.js
      working-directory: apps/site/assets/
  
  js_unit_2:
    name: Unit tests / JavaScript & TypeScript / Jest
    runs-on: ubuntu-latest
    needs: [file_changes, setup]
    if: ${{ needs.file_changes.outputs.ts || needs.file_changes.outputs.js }} 
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
    - run: |
        ASDF_DIR=$HOME/.asdf
        echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
        echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
        echo "$ASDF_DIR/bin" >> $GITHUB_PATH
        echo "$ASDF_DIR/shims" >> $GITHUB_PATH
        $ASDF_DIR/bin/asdf reshim
    - uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
    - uses: actions/cache@v2
      with:
        path: "apps/site/*/node_modules"
        key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
    - name: Build app
      run: |
        mix phx.digest
        npm run react:build
        npm run webpack:build
        mix compile --warnings-as-errors
    - run: npx jest -c ts/jest.config.js
      working-directory: apps/site/assets/
  
  type_dialyzer:
    name: Type checks / Elixir
    runs-on: ubuntu-latest
    needs: [file_changes, setup]
    if: ${{ needs.file_changes.outputs.ex }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      - run: |
          ASDF_DIR=$HOME/.asdf
          echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "$ASDF_DIR/bin" >> $GITHUB_PATH
          echo "$ASDF_DIR/shims" >> $GITHUB_PATH
          $ASDF_DIR/bin/asdf reshim
      - uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - uses: mbta/actions/dialyzer@v1
  
  type_typescript:
    name: Type checks / TypeScript
    runs-on: ubuntu-latest
    needs: [file_changes, setup]
    if: ${{ needs.file_changes.outputs.ts }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      - run: |
          ASDF_DIR=$HOME/.asdf
          echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "$ASDF_DIR/bin" >> $GITHUB_PATH
          echo "$ASDF_DIR/shims" >> $GITHUB_PATH
          $ASDF_DIR/bin/asdf reshim
      - uses: actions/cache@v2
        with:
          path: "apps/site/*/node_modules"
          key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
      - run: npx tsc --noEmit --skipLibCheck
        working-directory: apps/site/assets/ts

  elixir_format_check:
    name: Formatting / Elixir
    runs-on: ubuntu-latest
    needs: [file_changes, setup]
    if: ${{ needs.file_changes.outputs.ex }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      - run: |
          ASDF_DIR=$HOME/.asdf
          echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "$ASDF_DIR/bin" >> $GITHUB_PATH
          echo "$ASDF_DIR/shims" >> $GITHUB_PATH
          $ASDF_DIR/bin/asdf reshim
      - uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - run: mix format --check-formatted
  
  js_format_check:
    name: Formatting / JavaScript & TypeScript
    runs-on: ubuntu-latest
    needs: [file_changes, setup]
    if: ${{ needs.file_changes.outputs.js || needs.file_changes.outputs.ts }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
    - run: |
        ASDF_DIR=$HOME/.asdf
        echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
        echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
        echo "$ASDF_DIR/bin" >> $GITHUB_PATH
        echo "$ASDF_DIR/shims" >> $GITHUB_PATH
        $ASDF_DIR/bin/asdf reshim
    - uses: actions/cache@v2
      with:
        path: "apps/site/*/node_modules"
        key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
    - run: npx prettier "{js,ts}/**/*.{js,ts,tsx}" --list-different
      working-directory: apps/site/assets/

  elixir_wallaby:
    name: Integration tests / Elixir
    runs-on: ubuntu-latest
    needs: [file_changes, setup]
    if: ${{ needs.file_changes.outputs.ex }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      - run: |
          ASDF_DIR=$HOME/.asdf
          echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
          echo "$ASDF_DIR/bin" >> $GITHUB_PATH
          echo "$ASDF_DIR/shims" >> $GITHUB_PATH
          $ASDF_DIR/bin/asdf reshim
      - uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - uses: actions/cache@v2
        with:
          path: "apps/site/*/node_modules"
          key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
      - name: Build app
        run: |
          mix phx.digest
          npm run react:build
          npm run webpack:build
          mix compile --warnings-as-errors
      - env:
          RECAPTCHA_PUBLIC_KEY: 6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
          RECAPTCHA_PRIVATE_KEY: 6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
          OPEN_TRIP_PLANNER_URL: ${{ secrets.OPEN_TRIP_PLANNER_URL }}
        run: mix test --only wallaby
