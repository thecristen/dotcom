
name: Deploy to dev or a staging server
on:
  workflow_dispatch:
    inputs:
      aws_env:
        description: 'dev, dev-green, or dev-blue?'
        required: true
        default: dev-green

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.aws_env }}
    runs-on: ubuntu-latest

    # The environment specifies ELASTICBEANSTALK_APP_NAME & ENV_NAME
    environment: ${{ github.event.inputs.aws_env }}
    concurrency: ${{ github.event.inputs.aws_env }}

    env:
      AWS_REGION: us-east-1

    # TODO: Don't run if trying to deploy non-master to dev. Just don't do it!

    steps:
      - uses: actions/checkout@v2
      - id: metadata
        uses: mbta/actions/commit-metadata@v1

      # TODO: If this is being deployed to dev, run upload_assets.sh
      - if: ${{ github.event.inputs.aws_env }} == 'dev'
        run: |
          ./upload_assets.sh
      
      # Build a Docker image and push to ECR, outputs docker-tag
      - id: build-push
        uses: mbta/actions/build-push-ecr@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          docker-repo: ${{ secrets.DOCKER_REPO }}
    
      # Build an Elastic Beanstalk Dockerrun.aws.json based on an AWS ECR tag
      - id: deployment-package
        uses: mbta/actions/eb-ecr-dockerrun@v1
        with:
          docker-tag: ${{ steps.build-push.outputs.docker-tag }}
      
      # Deploy to Elastic Beanstalk
      - name: Deploy to EB
        uses: mbta/beanstalk-deploy@v18
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application-name: ${{ secrets.ELASTICBEANSTALK_APP_NAME}}
          environment-name: ${{ secrets.ELASTICBEANSTALK_ENV_NAME }}
          version-label: ${{ steps.metadata.outputs.sha-short }}
          version-description: ${{ steps.metadata.outputs.commit-message }}
          region: ${{ env.AWS_REGION }}
          deployment-package: ${{ steps.deployment-package.outputs.deployment-package }}
          use-existing-version-if-available: true
      
      # TODO: Move URLs to secrets
      - if: ${{ github.event.inputs.aws_env }} == 'dev'
        run: mix escript.install --force https://s3.amazonaws.com/mbta-dotcom/crawler && $HOME/.mix/escripts/crawler https://dev.mbtace.com --num-workers 3
      
      # Send notifications!
      - uses: mbta/actions/notify-slack-deploy@v1
        if: ${{ !cancelled() }}
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          job-status: ${{ job.status }}
