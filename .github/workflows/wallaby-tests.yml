name: everything
on: [push]
env:
  MIX_ENV: test

jobs:
  setup:
    name: Setup Dotcom
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # cache the ASDF directory, using the values from .tool-versions
    - name: ASDF cache
      uses: actions/cache@v2
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      id: asdf-cache
    # only run `asdf install` if we didn't hit the cache
    - uses: asdf-vm/actions/install@v1
      if: steps.asdf-cache.outputs.cache-hit != 'true'
    # if we did hit the cache, set up the environment
    - name: Setup ASDF environment
      run: |
        echo "ASDF_DIR=$HOME/.asdf" >> $GITHUB_ENV
        echo "ASDF_DATA_DIR=$HOME/.asdf" >> $GITHUB_ENV
      if: steps.asdf-cache.outputs.cache-hit == 'true'
    - name: Reshim ASDF
      run: |
        echo "$ASDF_DIR/bin" >> $GITHUB_PATH
        echo "$ASDF_DIR/shims" >> $GITHUB_PATH
        $ASDF_DIR/bin/asdf reshim
    - name: Restore Elixir dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install Elixir dependencies
      run: |
        mix local.hex --force
        mix local.rebar --force
        mix deps.get
    - name: Restore NodeJS dependencies cache
      uses: actions/cache@v2
      with:
        path: "apps/site/*/node_modules"
        key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
        restore-keys: ${{ runner.os }}-nodejs-
    - name: Install NodeJS dependencies
      run: |
        git config --global url."https://github.com/".insteadOf ssh://git@github.com/
        npm run install:ci && npm run react:setup:ci
  
  build:
    name: Build Dotcom application
    runs-on: ubuntu-latest
    needs: [setup]

    steps:
    - uses: actions/checkout@v2
    ############
    # Use all the cached stuff.
    ###########
    - name: ASDF cache
      uses: actions/cache@v2
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      id: asdf-cache
    - name: Restore Elixir dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Restore NodeJS dependencies cache
      uses: actions/cache@v2
      with:
        path: "apps/site/*/node_modules"
        key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
        restore-keys: ${{ runner.os }}-nodejs-
    - name: Webpack build
      run: npm run webpack:build
    - name: Webpack build [react_renderer]
      run: npm run react:build
    - name: Elixir - compile static assets
      run: mix phx.digest

  # format:
  #   name: Formatting && linting
  #   runs-on: ubuntu-latest
  #   needs: [setup]

  #   steps:
  #   - run: mix format --check-formatted
  #   - run: npm run tslint
  #   - run: npm run format:check
  #   - run: npm run stylelint
    
  # elixir_test:
  #   name: Run Elixir tests
  #   runs-on: ubuntu-latest
  #   needs: [setup]

  #   steps:
  #   - name: Mix test
  #     env:
  #       V3_URL: ${{ secrets.V3_URL}}
  #       V3_API_KEY: ${{ secrets.V3_API_KEY }}
  #     run: mix test --exclude wallaby

  # js_test:
  #   name: Run JS tests
  #   runs-on: ubuntu-latest
  #   needs: [setup]

  #   steps:
  #   - name: Js test
  #     env:
  #       V3_URL: ${{ secrets.V3_URL}}
  #       V3_API_KEY: ${{ secrets.V3_API_KEY }}
  #     run: npm run test:js


  
  # wallaby:
  #   name: Run wallaby tests
  #   runs-on: ubuntu-latest
  #   needs: [setup, build]

  #   steps:
  #   - name: Setup Chromedriver
  #     uses: nanasess/setup-chromedriver@master
  #   - name: Wallaby
  #     env:
  #       V3_URL: ${{ secrets.V3_URL}}
  #       V3_API_KEY: ${{ secrets.V3_API_KEY }}
  #       RECAPTCHA_PUBLIC_KEY: 6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
  #       RECAPTCHA_PRIVATE_KEY: 6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
  #     run: mix test --only wallaby
