name: everything
on: [push]
env:
  MIX_ENV: test

jobs:
  setup:
    name: Setup Dotcom caches
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: <asdf> Restore cache of languages from .tool-versions
      uses: actions/cache@v2
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      id: asdf-cache
    - name: <asdf> Install languages from .tool-versions (if needed)
      uses: asdf-vm/actions/install@v1
      if: steps.asdf-cache.outputs.cache-hit != 'true'

    - name: <elixir> Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
      id: elixir-cache
    - name: <elixir> Install dependencies (if needed)
      if: steps.elixir-cache.outputs.cache-hit != 'true'
      run: |
        mix local.hex --force
        mix local.rebar --force
        mix deps.get
    
    - name: <node> Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: "apps/site/*/node_modules"
        key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
        restore-keys: ${{ runner.os }}-nodejs-
      id: node-cache
    - name: <node> Install dependencies (if needed)
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: |
        git config --global url."https://github.com/".insteadOf ssh://git@github.com/
        npm run install:ci && npm run react:setup:ci
  
  lint:
    name: format / lint
    runs-on: ubuntu-latest
    needs: [setup]

    steps:
    - uses: actions/checkout@v2
    # - name: <asdf> Restore cache
    #   uses: actions/cache@v2
    #   with:
    #     path: ~/.asdf
    #     key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
    # - name: <asdf> Set env vars
    #   run: |
    #     ASDF_DIR=$HOME/.asdf
    #     echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
    #     echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
    #     echo "$ASDF_DIR/bin" >> $GITHUB_PATH
    #     echo "$ASDF_DIR/shims" >> $GITHUB_PATH
    # - name: <elixir> Restore dependencies cache
    #   uses: actions/cache@v2
    #   with:
    #     path: deps
    #     key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
    #     restore-keys: ${{ runner.os }}-mix-
    # - name: <node> Restore dependencies cache
    #   uses: actions/cache@v2
    #   with:
    #     path: "apps/site/*/node_modules"
    #     key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
    #     restore-keys: ${{ runner.os }}-nodejs-
    ############
    # Formatting && linting
    ###########
    - run: mix format --check-formatted
    - run: npm run tslint
    - run: npm run format:check
    - run: npm run stylelint
  
  elixir_test:
    name: Run Elixir tests
    runs-on: ubuntu-latest
    needs: [setup]

    steps:
    - uses: actions/checkout@v2
    ############
    # Use all the cached stuff.
    ###########
    # - name: <asdf> Restore cache
    #   uses: actions/cache@v2
    #   with:
    #     path: ~/.asdf
    #     key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
    # - name: <asdf> Set env vars
    #   run: |
    #     ASDF_DIR=$HOME/.asdf
    #     echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
    #     echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
    #     echo "$ASDF_DIR/bin" >> $GITHUB_PATH
    #     echo "$ASDF_DIR/shims" >> $GITHUB_PATH
    # - name: <elixir> Restore dependencies cache
    #   uses: actions/cache@v2
    #   with:
    #     path: deps
    #     key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
    #     restore-keys: ${{ runner.os }}-mix-
    # - name: <node> Restore dependencies cache
    #   uses: actions/cache@v2
    #   with:
    #     path: "apps/site/*/node_modules"
    #     key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
    #     restore-keys: ${{ runner.os }}-nodejs-
    ############
    # Build the application
    ###########  
    - run: ./semaphore/build_app.sh
      shell: bash
    ############
    # Run tests
    ###########
    - name: Mix test
      env:
        V3_URL: ${{ secrets.V3_URL}}
        V3_API_KEY: ${{ secrets.V3_API_KEY }}
        RECAPTCHA_PUBLIC_KEY: 6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
        RECAPTCHA_PRIVATE_KEY: 6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
        OPEN_TRIP_PLANNER_URL: ${{ secrets.OPEN_TRIP_PLANNER_URL }}
      run: mix test --exclude wallaby
  
  js_test:
    name: Run Javascript tests
    runs-on: ubuntu-latest
    needs: [setup]   

    steps:
    - uses: actions/checkout@v2
    ############
    # Use all the cached stuff.
    ###########
    # - name: <asdf> Restore cache
    #   uses: actions/cache@v2
    #   with:
    #     path: ~/.asdf
    #     key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
    # - name: <asdf> Set env vars
    #   run: |
    #     ASDF_DIR=$HOME/.asdf
    #     echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
    #     echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
    #     echo "$ASDF_DIR/bin" >> $GITHUB_PATH
    #     echo "$ASDF_DIR/shims" >> $GITHUB_PATH
    # - name: <elixir> Restore dependencies cache
    #   uses: actions/cache@v2
    #   with:
    #     path: deps
    #     key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
    #     restore-keys: ${{ runner.os }}-mix-
    # - name: <node> Restore dependencies cache
    #   uses: actions/cache@v2
    #   with:
    #     path: "apps/site/*/node_modules"
    #     key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
    #     restore-keys: ${{ runner.os }}-nodejs-
    ############
    # Build the application
    ###########  
    - run: ./semaphore/build_app.sh
      shell: bash
    ############
    # Run tests
    ###########
    - name: Mocha & Jest test
      env:
        V3_URL: ${{ secrets.V3_URL}}
        V3_API_KEY: ${{ secrets.V3_API_KEY }}
      run: npm run test:js
  
  wallaby:
    name: Run wallaby tests
    runs-on: ubuntu-latest
    needs: [setup]   

    steps:
    - uses: actions/checkout@v2
    - name: Setup Chromedriver
      uses: nanasess/setup-chromedriver@master
    - name: Wallaby
      env:
        V3_URL: ${{ secrets.V3_URL}}
        V3_API_KEY: ${{ secrets.V3_API_KEY }}
        RECAPTCHA_PUBLIC_KEY: 6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
        RECAPTCHA_PRIVATE_KEY: 6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
      run: mix test --only wallaby
